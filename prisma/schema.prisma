generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  ADMIN
  DOCTOR
}

model User {
  id         String    @id @default(cuid())
  FirstName  String
  LastName   String
  MiddleName String?
  phone      String    @unique
  role       Role
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  authId    String @unique
  auth       Auth     @relation(fields :[authId],references: [id],onDelete: Cascade)

  patient    Patient?
  doctor     Doctor?
  admin      Admin?

  @@index([phone])
}

model Auth {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?   
  @@index([email])
}

model Patient {
  id             String          @id@default(cuid())
  birthDate      DateTime
  medicalHistory String?
  
  user           User           @relation(fields: [id], references: [id])
  appointments   Appointment[]
  prescriptions  Prescription[]
  medicalRecords MedicalRecord[]
}

model Doctor {
  id                String          @id
  licenseNumber    String          @unique
  specialization   String
  yearsOfExperience Int
  
  user            User            @relation(fields: [id], references: [id])
  appointments    Appointment[]
  prescriptions   Prescription[]
  medicalRecords  MedicalRecord[]
}

model Appointment {
  id          String   @id @default(cuid())
  date        DateTime
  status      String
  description String?
  patientId   String
  doctorId    String
  
  patient     Patient  @relation(fields: [patientId], references: [id])
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
}

model MedicalRecord {
  id          Int      @id @default(autoincrement())
  recordDate  DateTime
  description String
  patientId   String
  doctorId    String
  
  patient     Patient  @relation(fields: [patientId], references: [id])
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
}

model Prescription {
  id        Int      @id @default(autoincrement())
  medication String
  dosage    String
  issuedAt  DateTime
  expiresAt DateTime
  patientId String
  doctorId  String
  
  patient   Patient  @relation(fields: [patientId], references: [id])
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
}

model Admin {
  id        String   @id
  joinedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [id], references: [id])
}